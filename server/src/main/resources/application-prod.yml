spring:
  security:
    oauth2:
      client:
        provider:
          # KAKAO Provider
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          # NAVER Provider
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

        registration:
          # KAKAO Client
          kakao:
            client-id: ${KAKAO_REST_API_KEY}
            client-secret: ${KAKAO_SECRET}
            redirect-uri: https://api.zerohip.co.kr/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: account_email
            client-authentication-method: POST

          # NAVER Client
          naver:
            client-id: ${NAVER_CLIENTID}
            client-secret: ${NAVER_SECRET}
            scope: email
            redirect-uri: https://api.zerohip.co.kr/login/oauth2/code/naver
            authorization-grant-type: authorization_code

          # Google Client
          google:
            clientId: ${GOOGLE_CLIENTID}
            clientSecret: ${GOOGLE_SECRET}
            scope:
              - email
            redirectUri: https://api.zerohip.co.kr/login/oauth2/code/google
            authorization-grant-type: authorization_code
  datasource:
    url: ${MYSQL_SECRET_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    open-in-view: true
logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
  server:
    port: 443
    ssl:
      key-store: /home/ubuntu/keystore.p12
      key-store-password: key
      key-store-type: PKCS12
    servlet:
      encoding:
        force-response: true
  servlet:
    encoding:
      force-response: true
#mail:
#  address:
#    admin: admin@gmail.com
jwt:
  key: ${JWT_KEY}
  access-token-expiration-minutes: ${JWT_ACCESS_TOKEN}
  refresh-token-expiration-minutes: ${JWT_REFRESH_TOKEN}
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET}
    region:
      static: ${AWS_REGION}
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    stack:
      auto: false
servlet:
  multipart:
    enabled: true
    max-file-size: 10MB
    max-request-size: 10MB
